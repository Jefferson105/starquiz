{"version":3,"sources":["webpack:///./components/allCards.js?5a8a","webpack:///./components/cardChar.js?882c","webpack:///./components/countDown.js?06af","webpack:///./components/detailChar.js?384a","webpack:///./components/finishGame.js?f84f","webpack:///./components/menu.js?0360","webpack:///./node_modules/isomorphic-unfetch/browser.js?2005","webpack:///(webpack)/buildin/harmony-module.js?cc96","webpack:///./pages/game.js?42bc"],"names":["AllCards","props","slide","num","slideRight","bind","slideLeft","parentWidth","list1","parentElement","offsetWidth","listWidth","scrollWidth","widthTranslated","Math","round","Array","from","document","getElementsByClassName","forEach","element","style","transform","characters","onPontuation","onGetDetail","finish","length","map","character","i","React","Component","CardChar","state","showInput","name","finished","correct","points","films","species","vehicles","starships","homeworld","showDetail","confirmName","getName","getDetais","setState","fields","field","details","info","allDetails","detail","fetch","data","json","res","title","console","log","toLowerCase","e","keyCode","target","value","photo","paddingZero","String","formatTime","sec","minutes","floor","seconds","abs","CountDown","time","timeFormated","currentTime","timeInterval","setInterval","clearInterval","DetailChar","show","foto","close","next","height","mass","hair_color","skin_color","eye_color","birth_year","gender","FinishGame","error","msg","email","localStorage","getItem","undefined","JSON","parse","user","savePontuation","checkValidity","url","location","href","replace","stringify","pontuation","options","method","headers","body","setItem","success","prototype","replaceSpecialChars","str","toString","charCodePlus","split","l","fromCharCode","charCodeAt","join","shuffle","j","random","Game","results","r","started","loading","getCharsPagination","getDetail","addPoint","finishTime","setTimeout","point","getInitialProps"],"mappings":"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","file":"bundles/pages/game.js","sourcesContent":["import CardChar from \"./cardChar\";\n\nexport default class AllCards extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.slide = {\n            num: 0\n        }\n\n        this.slideRight = this.slideRight.bind(this);\n        this.slideLeft = this.slideLeft.bind(this);\n    }\n\n    slideRight() {\n        var parentWidth = this.list1.parentElement.offsetWidth;\n        var listWidth = this.list1.scrollWidth;\n        var widthTranslated = parentWidth * this.slide.num + Math.round(parentWidth / 2);\n\n        if(widthTranslated > listWidth)\n            return;\n        else \n            this.slide.num++;\n    \n        Array.from(document.getElementsByClassName(\"game-content-list\")).forEach(element => {\n            element.style.transform = `translateX(-${this.slide.num * 100}%)`;\n        }); \n    }\n\n    slideLeft() {\n        this.slide.num--;\n        Array.from(document.getElementsByClassName(\"game-content-list\")).forEach(element =>  {\n            element.style.transform = `translateX(-${this.slide.num * 100}%)`;\n        });\n    }\n\n    render() {\n        const { characters, onPontuation, onGetDetail, finish } = this.props;\n        return(\n            <nav className=\"game-content\">\n                <button onClick={this.slideLeft} className=\"game-content-button\"><img src=\"/static/img/slide-left.svg\" /></button>\n                <div className=\"game-content-container\">\n                    <ul id=\"list-chars\" className=\"game-content-list\">\n                        {\n                            characters.length ? \n                                characters.map((character,i) => \n                                    (i % 2 == 0) ?        \n                                        \"\" :             \n                                        (finish) ?\n                                            <CardChar finished={true} onPontuation={onPontuation} onGetDetail={onGetDetail} info={character} key={i} /> :\n                                            <CardChar onPontuation={onPontuation} onGetDetail={onGetDetail} info={character} key={i} />) : \"\" \n                                    \n                        }\n                    </ul>\n                    <ul id=\"list-chars-1\" ref={(list1) => this.list1 = list1} className=\"game-content-list\">\n                        {\n                            characters.length ? \n                                characters.map((character,i) => \n                                    (i % 2 == 1) ?        \n                                        \"\" :             \n                                        (finish) ?\n                                            <CardChar finished={true} onPontuation={onPontuation} onGetDetail={onGetDetail} info={character} key={i} /> :\n                                            <CardChar onPontuation={onPontuation} onGetDetail={onGetDetail} info={character} key={i} />) : \"\" \n                                    \n                        }\n                    </ul>\n                </div>\n                <button onClick={this.slideRight} className=\"game-content-button\"><img src=\"/static/img/slide-right.svg\" /></button>\n            </nav>\n        )\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./components/allCards.js","export default class CardChar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showInput: false,\n            name: null,\n            finished: false,\n            correct: false,\n            points: 10\n        }\n\n        // Datails to get in api\n        this.films = [];\n        this.species = [];\n        this.vehicles = [];\n        this.starships = [];\n        this.homeworld = [];\n\n        // class methods\n        this.showInput = this.showInput.bind(this);\n        this.showDetail = this.showDetail.bind(this);\n        this.confirmName = this.confirmName.bind(this);\n        this.getName = this.getName.bind(this);\n        this.getDetais = this.getDetais.bind(this);\n\n        // Call function to get all details\n        this.getDetais([\"films\", \"species\", \"vehicles\", \"starships\", \"homeworld\"]);\n    }\n\n    // Change state to finish when receive props\n    componentWillReceiveProps() {\n        if(this.props.finished)\n            this.setState({ finished: this.props.finished });\n    }\n\n    // Get all remain details\n    getDetais(fields) {\n        fields.forEach(async (field) => {\n            var details = this.props.info[field];\n            var allDetails = null;\n            var detail = null;\n\n            for(var i = 0; i < details.length; i++) {\n                try {\n                    var data = await fetch(details[i]);\n                    var res = await data.json();\n\n                    switch(field) {\n                        case \"films\": \n                            detail = res.title;\n                            break;\n                        case \"species\":\n                            detail = res.name;\n                            break;\n                        case \"vehicles\":\n                            detail = res.name;\n                            break;\n                        case \"starships\":\n                            detail = res.name;\n                            break;\n                        case \"homeworld\":\n                            detail = res.name;\n                            break;\n                    }\n\n                    if(allDetails)\n                        allDetails += \", \" + detail;\n                    else\n                        allDetails = detail;\n                    \n                }catch(err) {\n                    console.log(err);\n                }\n            }\n\n            this[field] = allDetails;\n        });\n    }\n\n    // Show input when click on button with the pencil image\n    showInput() {\n        this.setState({ showInput: !this.state.showInput });\n    }\n\n    // Show detail modal when click on button with the info image\n    showDetail() {\n        const { onGetDetail, info } = this.props;\n\n        this.state.points = 5;\n\n        var { vehicles, species, films, starships, homeworld } = this;\n\n        // Call prop function to open modal with details\n        onGetDetail({ ...info, vehicles, species, films, starships, homeworld });\n    }\n\n    // submit the name the user entered\n    confirmName() {\n        const { name, points } = this.state;\n        \n        // Compare name entered with the character name in lowercase\n        if(name.toLowerCase() == this.props.info.name.toLowerCase()) {\n            this.props.onPontuation(points);\n            this.setState({ finished: true, correct: true });\n        }else \n            this.setState({ finished: true, correct: false });\n    }\n\n    // Get name entered while user types\n    getName(e) {\n        // If press enter confirm name\n        if(e.keyCode == 13)\n            this.confirmName();\n\n        // Save name entered in state \n        this.state.name = e.target.value;\n    }\n\n    render() {\n        const { showInput, finished, correct, name } = this.state;\n        return(\n            <li className={`game-content-list-item ${finished ? correct ? \"correct\" : \"wrong\" : \"\"}`}>\n                <figure className=\"game-content-list-item-pic\"> \n                    <img className=\"game-content-list-item-pic-img\" src={this.props.info.photo} />\n                </figure>\n\n                <React.Fragment>\n                {\n                    (finished) ? \n                        <p>{name}</p> :\n                        <footer className=\"game-content-list-item-footer\">\n                            <div className={`game-content-list-item-footer-container ${showInput ? \"show-input\" : \"\"}`}>\n                                <div className=\"game-content-list-item-controllers\">\n                                    <button onClick={this.showInput} title=\"Who am I?\" className=\"game-content-list-item-button game-content-list-item-button-show\"><img src=\"/static/img/pencil.svg\" /></button>\n                                    <button onClick={this.showDetail} title=\"Character Details\" className=\"game-content-list-item-button game-content-list-item-button-response\"><img src=\"/static/img/info.svg\" /></button>\n                                </div>\n                                <div className={`game-content-list-item-name`}>\n                                    <figure onClick={() => this.setState({ showInput: false })} title=\"Back\" className=\"game-content-list-item-name-back\">\n                                        <img className=\"game-content-list-item-name-back-img\" src=\"/static/img/slide-left.svg\" />\n                                    </figure>\n                                    <input onKeyUp={this.getName} type=\"text\" className=\"game-content-list-item-name-input\" />\n                                    <button title=\"Send Response\" onClick={this.confirmName} className=\"game-content-list-item-name-send\"><img src=\"/static/img/send.svg\" /></button>\n                                </div>\n                            </div>\n                        </footer>\n                }\n                </React.Fragment>\n            </li>\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./components/cardChar.js","const paddingZero = (num) => (String(num).length > 1) ? num : \"0\" + num;\n\nconst formatTime = (sec) => {\n    var minutes = Math.floor(sec / 60);\n    var seconds = Math.abs((minutes * 60) - sec);\n    return paddingZero(minutes) + \":\" + paddingZero(seconds);\n}\n\nexport default class CountDown extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            time: props.time,\n            timeFormated: formatTime(props.time)\n        }\n    }\n\n    componentWillMount() {\n        var currentTime = this.state.time;\n\n        // Set interval 1 second\n        var timeInterval = setInterval(() => {\n            currentTime -= 1; \n            this.setState({ time: currentTime, timeFormated: formatTime(currentTime) });\n            \n            // When time reach 0 clearinterval\n            if(!currentTime) {\n                clearInterval(timeInterval);\n                this.props.finish();\n            }\n        }, 1000);\n    }\n\n    render() {\n        const { timeFormated } = this.state;\n        return(\n            <div className=\"game-header-counter\">\n                <img className=\"game-header-counter-img\" src=\"/static/img/star-wars.svg\" />\n                <span>{timeFormated}</span>\n            </div>\n        )\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./components/countDown.js","import fetch from \"isomorphic-unfetch\";\n\nexport default class DetailChar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: false,\n            foto: props.info.photo\n        }\n\n        this.close = this.close.bind(this);\n    }\n\n    componentWillReceiveProps(next) {\n        if(next.info.name != this.props.info.name && !this.state.show) \n            this.setState({ show: true });\n    }\n\n    componentWillMount() {\n        this.setState({ show: true });\n    }\n\n    close() {\n        this.setState({ show: false });\n    }\n\n    render() {\n        const { name, height, mass, hair_color, skin_color, eye_color, birth_year, gender, homeworld, films, species, vehicles, starships, photo} = this.props.info;\n        const { show } = this.state;\n        return(\n            <section className={`detail ${show ? \"fadeIn\" : \"fadeOut\"}`}>\n                <div className=\"detail-content\">\n                    <img onClick={this.close} className=\"detail-content-close\" src=\"/static/img/close-button.svg\" />\n                    <h2 className=\"detail-title\">Details</h2>\n                    \n                    <div className=\"detail-info\">\n                        <figure className=\"detail-photo\">\n                            <img className=\"detail-photo-img\" src={photo} />\n                        </figure>                \n                        <div className=\"detail-text\">\n                            <p><b>Birth Year:</b> {birth_year}</p>\n                            <p><b>Eye Color:</b> {eye_color}</p>\n                            <p><b>Hair color:</b> {hair_color}</p>\n                            <p><b>Gender:</b> {gender}</p>\n                            <p><b>Height:</b> {height}</p>\n                            <p><b>Mass:</b> {mass}</p>\n                            <p><b>Skin color:</b> {skin_color}</p>\n                            <p><b>Films</b>: {films}</p>\n                            {\n                                homeworld ? \n                                    <p><b>Homeworld:</b> {homeworld}</p> : \"\"\n                            }\n                            {\n                                species ?\n                                    <p><b>Specie:</b> {species}</p> : \"\"\n                            }\n                            {\n                                vehicles ?\n                                    <p><b>Vehicles:</b> {vehicles}</p> : \"\"\n                            }\n                            {\n                                starships ? \n                                    <p><b>Starships:</b> {starships}</p> : \"\"\n                            }\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./components/detailChar.js","import fetch from \"isomorphic-unfetch\";\n\nexport default class FinishGame extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            error: false,\n            msg: null,\n            name: null,\n            email: null\n        }\n\n        if(localStorage.getItem(\"userInfo\") != undefined) {\n            var { email, user } = JSON.parse(localStorage.getItem(\"userInfo\"));\n            this.state.name = user;\n            this.state.email = email;\n        }\n\n        this.savePontuation = this.savePontuation.bind(this);\n    }\n\n    // Function called when user click in save pontuation\n    async savePontuation() {\n        if(this.email.checkValidity() && this.user.checkValidity()) {\n            try {\n                // Url api to save data in database\n                var url = location.href.replace(\"/game\", \"\");\n\n                // Stringify data posted by user\n                var data = JSON.stringify({\n                    user: this.user.value,\n                    email: this.email.value,\n                    pontuation: this.props.points\n                });\n\n                // Fetch options\n                var options = {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: data\n                }\n\n                // Save in local stora\n                localStorage.setItem(\"userInfo\", data);\n\n                // Send data to api\n                var res = await fetch(url + \"/api/save\", options);\n                var { success, error } = await res.json();\n\n                if(success) \n                    location = \"/score\";\n                else\n                    this.setState({ error: true, msg: \"An error has ocurred. Try again.\" }); \n            }catch(err) {\n                console.error(err);\n                this.setState({ error: true, msg: \"An error has ocurred. Try again.\" });    \n            }\n        }else {\n            this.setState({ error: true, msg: \"Fill the fields correctly\" });\n        }\n    }\n\n    render() {\n        const { points } = this.props;\n        const { error, msg, name, email } = this.state;\n        return(\n            <section className=\"finish\">\n                <div className=\"finish-content\">\n                    <h2 className=\"finish-title\">Your pontuation</h2>\n                    <p className=\"finish-point\">{points}</p>\n\n                    <form className=\"finish-form\">\n                        <p className=\"finish-form-content\">\n                            <label className=\"finish-form-label\" htmlFor=\"name\">Name: </label>\n                            <input className=\"finish-form-input\" defaultValue={name ? name : \"\"} required pattern=\"[A-Za-zÀ-ú ]+\" ref={(user) => {\n                                this.user = user;\n                            }} id=\"name\" type=\"text\" autoFocus />\n                        </p>\n                        <p className=\"finish-form-content\">\n                            <label className=\"finish-form-label\" htmlFor=\"email\">Email: </label>\n                            <input className=\"finish-form-input\" defaultValue={email ? email : \"\"} required pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" ref={(email) => {\n                                this.email = email;\n                            }} id=\"email\" type=\"email\" />\n                        </p>\n                    </form>\n                    {\n                        (error) ?\n                            <p className=\"finish-error\">{msg}</p> : \"\"\n                    }\n                    <button className=\"finish-save\" onClick={this.savePontuation}>Save</button>\n                </div>\n            </section>\n        );\n    }\n}\n\n//<img className=\"finish-close\" src=\"/static/img/close-button.svg\" />\n\n\n// WEBPACK FOOTER //\n// ./components/finishGame.js","export default () => \n    <nav className=\"menu\">\n        <ul className=\"menu-list\">\n            <li className=\"menu-list-item\"><a href=\"/\">Home</a></li>\n            <li className=\"menu-list-item\"><a href=\"/game\">Game</a></li>\n            <li className=\"menu-list-item\"><a href=\"/score\">Score</a></li>\n        </ul>\n    </nav>\n\n\n// WEBPACK FOOTER //\n// ./components/menu.js","module.exports = window.fetch || (window.fetch = require('unfetch').default || require('unfetch'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isomorphic-unfetch/browser.js\n// module id = ./node_modules/isomorphic-unfetch/browser.js\n// module chunks = 3","module.exports = function(originalModule) {\r\n\tif(!originalModule.webpackPolyfill) {\r\n\t\tvar module = Object.create(originalModule);\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"exports\", {\r\n\t\t\tenumerable: true,\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/harmony-module.js\n// module id = ./node_modules/webpack/buildin/harmony-module.js\n// module chunks = 3","String.prototype.replaceSpecialChars = function() {\n    var str = this.toString();\n    str = str.replace(/[ÀÁÃÄÂ]/g,\"A\");\n    str = str.replace(/[àáãâä]/g,\"a\");\n    str = str.replace(/[ÈÉÊË]/g,\"E\");\n    str = str.replace(/[èéêë]/g,\"e\");\n    str = str.replace(/[ÌÍÎÏ]/g,\"I\");\n    str = str.replace(/[ìíîï]/g,\"i\");\n    str = str.replace(/[ÒÓÔÕÖ]/g,\"O\");\n    str = str.replace(/[òóôõö]/g,\"o\");\n    str = str.replace(/[ÙÚÛŨÜ]/g,\"U\");\n    str = str.replace(/[ùúûũü]/g,\"u\");\n    str = str.replace(/[Ç]/g,\"C\");\n    str = str.replace(/[ç]/g,\"c\");\n\n    return str;\n};\n\nString.prototype.charCodePlus = function() {\n    var str = this.toString().split(\"\");\n    return str.map((l) => String.fromCharCode(l.charCodeAt(0) + 1)).join(\"\");\n}\n\nArray.prototype.shuffle = function() {\n    for(let i = this.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [this[i], this[j]] = [this[j], this[i]];\n    }\n\n    return this;\n}\n\nimport \"./scss/style.scss\";\nimport fetch from \"isomorphic-unfetch\";\nimport CountDown from \"../components/countDown\";\nimport AllCards from \"../components/allCards\";\nimport DetailChar from \"../components/detailChar\";\nimport FinishGame from \"../components/finishGame\";\nimport Menu from \"../components/menu\";\n\nexport default class Game extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // Map image character\n        var results = props.data ? props.data.results : [];\n        if(results.length) \n            results = results.map((r) => ({ ...r, photo:  `/static/img/chars/${r.name.split(\" \")[0].replaceSpecialChars().charCodePlus()}.jpeg` }));\n\n        this.state = {\n            characters: results,\n            info: null,\n            points: 0,\n            finish: false,\n            started: false,\n            loading: true\n        };\n\n        this.getCharsPagination = this.getCharsPagination.bind(this);\n        this.getDetail = this.getDetail.bind(this);\n        this.addPoint = this.addPoint.bind(this); \n        this.finishTime = this.finishTime.bind(this);\n\n        if(props.data)\n            this.getCharsPagination(props.data.next);\n    }\n\n    componentWillMount() {\n        setTimeout(() => {\n            this.setState({ started: true, loading: false })\n        }, 10000);\n    }\n\n    // Get chars in pagination\n    async getCharsPagination(url) {\n        try {\n            var res = await fetch(url);\n            var { next, results } = await res.json();\n            \n            // Map image character\n            if(results.length)\n                results = results.map((r) => ({ ...r, photo:  `/static/img/chars/${r.name.split(\" \")[0].replaceSpecialChars().charCodePlus()}.jpeg` }));\n\n            if(next)\n                this.getCharsPagination(next);\n            \n            this.setState({ characters: [...this.state.characters, ...results] });\n        }catch(err) {\n            console.error(err);\n        }\n    }\n\n    // Change state to modal detail modal\n    getDetail(info) {\n        this.setState({ info: info });\n    }\n\n    // Add point to player\n    addPoint(point) {\n        const { points } = this.state;\n        this.setState({ points: points + point });\n    }\n\n    // Change state when countdown finish\n    finishTime() {\n        this.setState({ finish: true });\n    }\n\n    render() {\n        const { characters, info, points, finish, started, loading } = this.state;\n        return(\n            <section className=\"game\">\n                <Menu />\n\n                <header className=\"game-header\">\n                    <h1 className=\"game-header-title\">Star<br />Quiz</h1>\n                    <p className=\"game-header-points\">{points}</p>\n                    {\n                        started ?\n                            <CountDown finish={this.finishTime} time={120} /> : \"\"\n                    }\n                    <p id=\"text\" className=\"game-header-txt\">Do you really know about Star Wars? Test it now!</p>\n                </header>\n\n                {\n                    finish ? \n                        <AllCards finish={true} characters={characters} onPontuation={this.addPoint} onGetDetail={this.getDetail} /> :\n                        <AllCards characters={characters} onPontuation={this.addPoint} onGetDetail={this.getDetail} />\n                }\n\n                { info ? <DetailChar info={info} /> : \"\" }\n                \n                { finish ? <FinishGame points={points} /> : \"\" }\n                \n                <div className={`loading ${loading ? \"fadeIn\" : \"fadeOut\"}`}>\n                    <div className=\"loading-content\">\n                        {\n                            (loading) ? \n                                <h2 className=\"loading-title\">Preparing the game. Wait...</h2> :\n                                <h2 className=\"loading-title\">Start</h2>\n                        }\n                        <img className=\"loading-img\" src=\"/static/img/star-wars.svg\" />\n                    </div>\n                </div>\n\n                <footer className=\"footer\">Made by &copy; Jefferson Barbosa</footer>\n\n                <div className=\"game-bg\"></div>\n            </section>\n        );\n    }\n}\n\nGame.getInitialProps = async function() {\n    const res = await fetch(`https://swapi.co/api/people/`);\n    const data = await res.json();\n\n    return { data }; \n}\n\n\n// WEBPACK FOOTER //\n// ./pages/game.js"],"sourceRoot":""}