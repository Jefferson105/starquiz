{"version":3,"sources":["webpack:///./pages/game.js?42bc"],"names":["String","prototype","replaceSpecialChars","str","toString","replace","charCodePlus","split","map","l","fromCharCode","charCodeAt","join","Array","shuffle","i","length","j","Math","floor","random","Game","props","results","data","r","photo","name","state","characters","info","points","finish","started","loading","getDetail","bind","addPoint","finishTime","path","fetch","res","json","d","setState","point","React","Component","getInitialProps","req","host","headers","protocol","referer","indexOf"],"mappings":"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","file":"4.6303e205b3af8262b74a.hot-update.js","sourcesContent":["String.prototype.replaceSpecialChars = function() {\n    var str = this.toString();\n    str = str.replace(/[ÀÁÃÄÂ]/g,\"A\");\n    str = str.replace(/[àáãâä]/g,\"a\");\n    str = str.replace(/[ÈÉÊË]/g,\"E\");\n    str = str.replace(/[èéêë]/g,\"e\");\n    str = str.replace(/[ÌÍÎÏ]/g,\"I\");\n    str = str.replace(/[ìíîï]/g,\"i\");\n    str = str.replace(/[ÒÓÔÕÖ]/g,\"O\");\n    str = str.replace(/[òóôõö]/g,\"o\");\n    str = str.replace(/[ÙÚÛŨÜ]/g,\"U\");\n    str = str.replace(/[ùúûũü]/g,\"u\");\n    str = str.replace(/[Ç]/g,\"C\");\n    str = str.replace(/[ç]/g,\"c\");\n\n    return str;\n};\n\nString.prototype.charCodePlus = function() {\n    var str = this.toString().split(\"\");\n    return str.map((l) => String.fromCharCode(l.charCodeAt(0) + 1)).join(\"\");\n}\n\nArray.prototype.shuffle = function() {\n    for(let i = this.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [this[i], this[j]] = [this[j], this[i]];\n    }\n\n    return this;\n}\n\nimport \"./scss/style.scss\";\nimport fetch from \"isomorphic-unfetch\";\nimport CountDown from \"../components/countDown\";\nimport AllCards from \"../components/allCards\";\nimport DetailChar from \"../components/detailChar\";\nimport FinishGame from \"../components/finishGame\";\nimport Menu from \"../components/menu\";\n\nexport default class Game extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // Map image character\n        var results = props.data ? props.data.results : [];\n        if(results.length) \n            results = results.map((r) => ({ ...r, photo:  `/static/img/chars/${r.name.split(\" \")[0].replaceSpecialChars().charCodePlus()}.jpeg` }));\n\n        this.state = {\n            characters: results,\n            info: null,\n            points: 0,\n            finish: false,\n            started: false,\n            loading: true\n        };\n\n        //this.getCharsPagination = this.getCharsPagination.bind(this);\n        this.getDetail = this.getDetail.bind(this);\n        this.addPoint = this.addPoint.bind(this); \n        this.finishTime = this.finishTime.bind(this);\n\n        //if(props.data)\n          //  this.getCharsPagination(props.data.next);\n    }\n\n    async componentWillMount() {\n        const { path } = this.props;\n        var res = await fetch(path + \"/api/allChars\");\n        var characters = await res.json();\n        \n        characters = characters.map((d) => ({ ...d, photo:  `/static/img/chars/${d.name.split(\" \")[0].replaceSpecialChars().charCodePlus()}.jpeg` }));\n\n        this.setState({ characters, started: true, loading: false });\n    }\n\n    // Change state to modal detail modal\n    getDetail(info) {\n        this.setState({ info: info });\n    }\n\n    // Add point to player\n    addPoint(point) {\n        const { points } = this.state;\n        this.setState({ points: points + point });\n    }\n\n    // Change state when countdown finish\n    finishTime() {\n        this.setState({ finish: true });\n    }\n\n    render() {\n        const { characters, info, points, finish, started, loading } = this.state;\n        return(\n            <section className=\"game\">\n                <Menu />\n\n                <header className=\"game-header\">\n                    <h1 className=\"game-header-title\">Star<br />Quiz</h1>\n                    <p className=\"game-header-points\">{points}</p>\n                    {\n                        started ?\n                            <CountDown finish={this.finishTime} time={120} /> : \"\"\n                    }\n                    <p id=\"text\" className=\"game-header-txt\">Do you really know about Star Wars? Test it now!</p>\n                </header>\n\n                {\n                    finish ? \n                        <AllCards finish={true} characters={characters} onPontuation={this.addPoint} onGetDetail={this.getDetail} /> :\n                        <AllCards characters={characters} onPontuation={this.addPoint} onGetDetail={this.getDetail} />\n                }\n\n                { info ? <DetailChar info={info} /> : \"\" }\n                \n                { finish ? <FinishGame points={points} /> : \"\" }\n                \n                <div className={`loading ${loading ? \"fadeIn\" : \"fadeOut\"}`}>\n                    <div className=\"loading-content\">\n                        {\n                            (loading) ? \n                                <h2 className=\"loading-title\">Preparing the game. Wait...</h2> :\n                                <h2 className=\"loading-title\">Start</h2>\n                        }\n                        <img className=\"loading-img\" src=\"/static/img/star-wars.svg\" />\n                    </div>\n                </div>\n\n                <footer className=\"footer\">Made by &copy; Jefferson Barbosa</footer>\n\n                <div className=\"game-bg\"></div>\n            </section>\n        );\n    }\n}\n\nGame.getInitialProps = async function({ req }) {\n    var host = req.headers.host;\n    var protocol = req.headers.referer.indexOf(\"https\") > -1 ? \"https://\" : \"http://\";\n    var path = protocol + host;\n\n    //const res = await fetch(`https://swapi.co/api/people/`);\n    //const data = await res.json();\n\n    return { path }; \n}\n\n\n// WEBPACK FOOTER //\n// ./pages/game.js"],"sourceRoot":""}