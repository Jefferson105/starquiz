{"version":3,"sources":["webpack:///./components/cardChar.js?882c"],"names":["CardChar","props","state","showInput","name","finished","correct","points","films","species","vehicles","starships","homeworld","bind","showDetail","confirmName","getName","setState","fields","forEach","field","details","info","allDetails","detail","i","length","console","log","fetch","data","json","res","title","onGetDetail","toLowerCase","onPontuation","e","keyCode","target","value","photo","React","Component"],"mappings":"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","file":"4.bdea86441c21f8cb182d.hot-update.js","sourcesContent":["export default class CardChar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showInput: false,\n            name: null,\n            finished: false,\n            correct: false,\n            points: 10\n        }\n\n        // Datails to get in api\n        this.films = [];\n        this.species = [];\n        this.vehicles = [];\n        this.starships = [];\n        this.homeworld = [];\n\n        // class methods\n        this.showInput = this.showInput.bind(this);\n        this.showDetail = this.showDetail.bind(this);\n        this.confirmName = this.confirmName.bind(this);\n        this.getName = this.getName.bind(this);\n        //this.getDetais = this.getDetais.bind(this);\n\n        // Call function to get all details\n        //this.getDetais([\"films\", \"species\", \"vehicles\", \"starships\", \"homeworld\"]);\n    }\n\n    // Change state to finish when receive props\n    componentWillReceiveProps() {\n        if(this.props.finished)\n            this.setState({ finished: this.props.finished });\n    }\n\n    // Get all remain details\n    getDetais(fields) {\n        fields.forEach(async (field) => {\n            var details = this.props.info[field];\n            var allDetails = null;\n            var detail = null;\n\n            for(var i = 0; i < details.length; i++) {\n                console.log(details[i]);\n                try {\n                    var data = await fetch(details[i]);\n                    var res = await data.json();\n\n                    switch(field) {\n                        case \"films\": \n                            detail = res.title;\n                            break;\n                        case \"species\":\n                            detail = res.name;\n                            break;\n                        case \"vehicles\":\n                            detail = res.name;\n                            break;\n                        case \"starships\":\n                            detail = res.name;\n                            break;\n                        case \"homeworld\":\n                            detail = res.name;\n                            break;\n                    }\n\n                    console.log(detail);\n\n                    if(allDetails)\n                        allDetails += \", \" + detail;\n                    else\n                        allDetails = detail;\n                    \n                }catch(err) {\n                    //console.log(err);\n                }\n            }\n\n            this[field] = allDetails;\n        });\n    }\n\n    // Show input when click on button with the pencil image\n    showInput() {\n        this.setState({ showInput: !this.state.showInput });\n    }\n\n    // Show detail modal when click on button with the info image\n    showDetail() {\n        const { onGetDetail, info } = this.props;\n\n        this.state.points = 5;\n\n        // Call prop function to open modal with details\n        onGetDetail({ ...info });\n    }\n\n    // submit the name the user entered\n    confirmName() {\n        const { name, points } = this.state;\n        \n        // Compare name entered with the character name in lowercase\n        if(name.toLowerCase() == this.props.info.name.toLowerCase()) {\n            this.props.onPontuation(points);\n            this.setState({ finished: true, correct: true });\n        }else \n            this.setState({ finished: true, correct: false });\n    }\n\n    // Get name entered while user types\n    getName(e) {\n        // If press enter confirm name\n        if(e.keyCode == 13)\n            this.confirmName();\n\n        // Save name entered in state \n        this.state.name = e.target.value;\n    }\n\n    render() {\n        const { showInput, finished, correct, name } = this.state;\n        return(\n            <li className={`game-content-list-item ${finished ? correct ? \"correct\" : \"wrong\" : \"\"}`}>\n                <figure className=\"game-content-list-item-pic\"> \n                    <img className=\"game-content-list-item-pic-img\" src={this.props.info.photo} />\n                </figure>\n\n                <React.Fragment>\n                {\n                    (finished) ? \n                        <p>{name}</p> :\n                        <footer className=\"game-content-list-item-footer\">\n                            <div className={`game-content-list-item-footer-container ${showInput ? \"show-input\" : \"\"}`}>\n                                <div className=\"game-content-list-item-controllers\">\n                                    <button onClick={this.showInput} title=\"Who am I?\" className=\"game-content-list-item-button game-content-list-item-button-show\"><img src=\"/static/img/pencil.svg\" /></button>\n                                    <button onClick={this.showDetail} title=\"Character Details\" className=\"game-content-list-item-button game-content-list-item-button-response\"><img src=\"/static/img/info.svg\" /></button>\n                                </div>\n                                <div className={`game-content-list-item-name`}>\n                                    <figure onClick={() => this.setState({ showInput: false })} title=\"Back\" className=\"game-content-list-item-name-back\">\n                                        <img className=\"game-content-list-item-name-back-img\" src=\"/static/img/slide-left.svg\" />\n                                    </figure>\n                                    <input onKeyUp={this.getName} type=\"text\" className=\"game-content-list-item-name-input\" />\n                                    <button title=\"Send Response\" onClick={this.confirmName} className=\"game-content-list-item-name-send\"><img src=\"/static/img/send.svg\" /></button>\n                                </div>\n                            </div>\n                        </footer>\n                }\n                </React.Fragment>\n            </li>\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./components/cardChar.js"],"sourceRoot":""}